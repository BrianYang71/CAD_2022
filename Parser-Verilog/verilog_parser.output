Terminals unused in grammar

   NEWLINE
   UNDEFINED


State 186 conflicts: 1 shift/reduce
State 206 conflicts: 1 shift/reduce


Grammar

    0 $accept: design "end of file"

    1 valid_name: NAME
    2           | ESCAPED_NAME

    3 design: modules

    4 modules: %empty
    5        | modules module

    6 $@1: %empty

    7 module: MODULE valid_name ';' $@1 statements ENDMODULE

    8 $@2: %empty

    9 module: MODULE valid_name '(' ')' ';' $@2 statements ENDMODULE

   10 $@3: %empty

   11 module: MODULE valid_name '(' port_names ')' ';' $@3 statements ENDMODULE

   12 $@4: %empty

   13 $@5: %empty

   14 module: MODULE valid_name '(' $@4 port_declarations ')' $@5 ';' statements ENDMODULE

   15 port_names: valid_name
   16           | port_names ',' valid_name

   17 port_type: INPUT
   18          | INPUT WIRE
   19          | OUTPUT
   20          | OUTPUT REG
   21          | INOUT
   22          | INOUT WIRE
   23          | INOUT REG

   24 port_declarations: port_decl
   25                  | port_declarations ',' port_decl
   26                  | port_declarations ',' valid_name

   27 port_decl: port_type valid_name
   28          | port_type '[' INTEGER ':' INTEGER ']' valid_name

   29 statements: %empty
   30           | statements statement
   31           | statements statement_assign

   32 statement: declaration
   33          | instance

   34 declaration: port_decl_statements ';'
   35            | net_decl_statements ';'

   36 port_decl_statements: port_decl
   37                     | port_decl_statements ',' valid_name

   38 net_type: WIRE
   39         | WAND
   40         | WOR
   41         | TRI
   42         | TRIOR
   43         | TRIAND
   44         | SUPPLY0
   45         | SUPPLY1

   46 net_decl_statements: net_decl
   47                    | net_decl_statements ',' valid_name

   48 net_decl: net_type valid_name
   49         | net_type '[' INTEGER ':' INTEGER ']' valid_name

   50 statement_assign: ASSIGN assignments ';'

   51 assignments: assignment
   52            | assignments ',' assignment

   53 assignment: lhs '=' rhs

   54 lhs: valid_name
   55    | valid_name '[' INTEGER ']'
   56    | valid_name '[' INTEGER ':' INTEGER ']'
   57    | lhs_concat

   58 lhs_concat: '{' lhs_exprs '}'

   59 lhs_exprs: lhs_expr
   60          | lhs_exprs ',' lhs_expr

   61 lhs_expr: valid_name
   62         | valid_name '[' INTEGER ']'
   63         | valid_name '[' INTEGER ':' INTEGER ']'
   64         | lhs_concat

   65 constant: INTEGER
   66         | BINARY
   67         | OCTAL
   68         | DECIMAL
   69         | HEX
   70         | REAL
   71         | EXP

   72 rhs: valid_name
   73    | valid_name '[' INTEGER ']'
   74    | valid_name '[' INTEGER ':' INTEGER ']'
   75    | constant
   76    | rhs_concat

   77 rhs_concat: '{' rhs_exprs '}'

   78 rhs_exprs: rhs_expr
   79          | rhs_exprs ',' rhs_expr

   80 rhs_expr: valid_name
   81         | valid_name '[' INTEGER ']'
   82         | valid_name '[' INTEGER ':' INTEGER ']'
   83         | constant
   84         | rhs_concat

   85 instance: valid_name valid_name '(' inst_pins ')' ';'
   86         | valid_name parameters valid_name '(' inst_pins ')' ';'

   87 inst_pins: %empty
   88          | nets_by_position
   89          | nets_by_name

   90 nets_by_position: rhs
   91                 | nets_by_position ',' rhs

   92 nets_by_name: net_by_name
   93             | nets_by_name ',' net_by_name

   94 net_by_name: '.' valid_name '(' ')'
   95            | '.' valid_name '(' valid_name ')'
   96            | '.' valid_name '(' valid_name '[' INTEGER ']' ')'
   97            | '.' valid_name '(' rhs ')'
   98            | '.' valid_name '[' INTEGER ']' '(' ')'
   99            | '.' valid_name '[' INTEGER ']' '(' rhs ')'
  100            | '.' valid_name '[' INTEGER ':' INTEGER ']' '(' ')'
  101            | '.' valid_name '[' INTEGER ':' INTEGER ']' '(' rhs ')'

  102 parameters: '#' '(' param_exprs ')'

  103 param_exprs: param_expr
  104            | param_exprs ',' param_expr

  105 param_expr: valid_name
  106           | '`' valid_name
  107           | constant
  108           | '-' param_expr
  109           | param_expr '+' param_expr
  110           | param_expr '-' param_expr
  111           | param_expr '*' param_expr
  112           | param_expr '/' param_expr
  113           | '(' param_expr ')'


Terminals, with rules where they appear

"end of file" (0) 0
'#' (35) 102
'(' (40) 9 11 14 85 86 94 95 96 97 98 99 100 101 102 113
')' (41) 9 11 14 85 86 94 95 96 97 98 99 100 101 102 113
'*' (42) 111
'+' (43) 109
',' (44) 16 25 26 37 47 52 60 79 91 93 104
'-' (45) 108 110
'.' (46) 94 95 96 97 98 99 100 101
'/' (47) 112
':' (58) 28 49 56 63 74 82 100 101
';' (59) 7 9 11 14 34 35 50 85 86
'=' (61) 53
'[' (91) 28 49 55 56 62 63 73 74 81 82 96 98 99 100 101
']' (93) 28 49 55 56 62 63 73 74 81 82 96 98 99 100 101
'`' (96) 106
'{' (123) 58 77
'}' (125) 58 77
error (256)
UMINUS (258)
NEWLINE (259)
UNDEFINED (260)
NAME (261) 1
ESCAPED_NAME (262) 2
INTEGER (263) 28 49 55 56 62 63 65 73 74 81 82 96 98 99 100 101
BINARY (264) 66
OCTAL (265) 67
DECIMAL (266) 68
HEX (267) 69
REAL (268) 70
EXP (269) 71
MODULE (270) 7 9 11 14
ENDMODULE (271) 7 9 11 14
INPUT (272) 17 18
OUTPUT (273) 19 20
INOUT (274) 21 22 23
REG (275) 20 23
WIRE (276) 18 22 38
WAND (277) 39
WOR (278) 40
TRI (279) 41
TRIOR (280) 42
TRIAND (281) 43
SUPPLY0 (282) 44
SUPPLY1 (283) 45
ASSIGN (284) 50


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
valid_name (48)
    on left: 1 2, on right: 7 9 11 14 15 16 26 27 28 37 47 48 49 54
    55 56 61 62 63 72 73 74 80 81 82 85 86 94 95 96 97 98 99 100 101
    105 106
design (49)
    on left: 3, on right: 0
modules (50)
    on left: 4 5, on right: 3 5
module (51)
    on left: 7 9 11 14, on right: 5
$@1 (52)
    on left: 6, on right: 7
$@2 (53)
    on left: 8, on right: 9
$@3 (54)
    on left: 10, on right: 11
$@4 (55)
    on left: 12, on right: 14
$@5 (56)
    on left: 13, on right: 14
port_names (57)
    on left: 15 16, on right: 11 16
port_type (58)
    on left: 17 18 19 20 21 22 23, on right: 27 28
port_declarations (59)
    on left: 24 25 26, on right: 14 25 26
port_decl (60)
    on left: 27 28, on right: 24 25 36
statements (61)
    on left: 29 30 31, on right: 7 9 11 14 30 31
statement (62)
    on left: 32 33, on right: 30
declaration (63)
    on left: 34 35, on right: 32
port_decl_statements (64)
    on left: 36 37, on right: 34 37
net_type (65)
    on left: 38 39 40 41 42 43 44 45, on right: 48 49
net_decl_statements (66)
    on left: 46 47, on right: 35 47
net_decl (67)
    on left: 48 49, on right: 46
statement_assign (68)
    on left: 50, on right: 31
assignments (69)
    on left: 51 52, on right: 50 52
assignment (70)
    on left: 53, on right: 51 52
lhs (71)
    on left: 54 55 56 57, on right: 53
lhs_concat (72)
    on left: 58, on right: 57 64
lhs_exprs (73)
    on left: 59 60, on right: 58 60
lhs_expr (74)
    on left: 61 62 63 64, on right: 59 60
constant (75)
    on left: 65 66 67 68 69 70 71, on right: 75 83 107
rhs (76)
    on left: 72 73 74 75 76, on right: 53 90 91 97 99 101
rhs_concat (77)
    on left: 77, on right: 76 84
rhs_exprs (78)
    on left: 78 79, on right: 77 79
rhs_expr (79)
    on left: 80 81 82 83 84, on right: 78 79
instance (80)
    on left: 85 86, on right: 33
inst_pins (81)
    on left: 87 88 89, on right: 85 86
nets_by_position (82)
    on left: 90 91, on right: 88 91
nets_by_name (83)
    on left: 92 93, on right: 89 93
net_by_name (84)
    on left: 94 95 96 97 98 99 100 101, on right: 92 93
parameters (85)
    on left: 102, on right: 86
param_exprs (86)
    on left: 103 104, on right: 102 104
param_expr (87)
    on left: 105 106 107 108 109 110 111 112 113, on right: 103 104
    108 109 110 111 112 113


State 0

    0 $accept: . design "end of file"

    $default  reduce using rule 4 (modules)

    design   go to state 1
    modules  go to state 2


State 1

    0 $accept: design . "end of file"

    "end of file"  shift, and go to state 3


State 2

    3 design: modules .
    5 modules: modules . module

    MODULE  shift, and go to state 4

    $default  reduce using rule 3 (design)

    module  go to state 5


State 3

    0 $accept: design "end of file" .

    $default  accept


State 4

    7 module: MODULE . valid_name ';' $@1 statements ENDMODULE
    9       | MODULE . valid_name '(' ')' ';' $@2 statements ENDMODULE
   11       | MODULE . valid_name '(' port_names ')' ';' $@3 statements ENDMODULE
   14       | MODULE . valid_name '(' $@4 port_declarations ')' $@5 ';' statements ENDMODULE

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 8


State 5

    5 modules: modules module .

    $default  reduce using rule 5 (modules)


State 6

    1 valid_name: NAME .

    $default  reduce using rule 1 (valid_name)


State 7

    2 valid_name: ESCAPED_NAME .

    $default  reduce using rule 2 (valid_name)


State 8

    7 module: MODULE valid_name . ';' $@1 statements ENDMODULE
    9       | MODULE valid_name . '(' ')' ';' $@2 statements ENDMODULE
   11       | MODULE valid_name . '(' port_names ')' ';' $@3 statements ENDMODULE
   14       | MODULE valid_name . '(' $@4 port_declarations ')' $@5 ';' statements ENDMODULE

    ';'  shift, and go to state 9
    '('  shift, and go to state 10


State 9

    7 module: MODULE valid_name ';' . $@1 statements ENDMODULE

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 10

    9 module: MODULE valid_name '(' . ')' ';' $@2 statements ENDMODULE
   11       | MODULE valid_name '(' . port_names ')' ';' $@3 statements ENDMODULE
   14       | MODULE valid_name '(' . $@4 port_declarations ')' $@5 ';' statements ENDMODULE

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    ')'           shift, and go to state 12

    $default  reduce using rule 12 ($@4)

    valid_name  go to state 13
    $@4         go to state 14
    port_names  go to state 15


State 11

    7 module: MODULE valid_name ';' $@1 . statements ENDMODULE

    $default  reduce using rule 29 (statements)

    statements  go to state 16


State 12

    9 module: MODULE valid_name '(' ')' . ';' $@2 statements ENDMODULE

    ';'  shift, and go to state 17


State 13

   15 port_names: valid_name .

    $default  reduce using rule 15 (port_names)


State 14

   14 module: MODULE valid_name '(' $@4 . port_declarations ')' $@5 ';' statements ENDMODULE

    INPUT   shift, and go to state 18
    OUTPUT  shift, and go to state 19
    INOUT   shift, and go to state 20

    port_type          go to state 21
    port_declarations  go to state 22
    port_decl          go to state 23


State 15

   11 module: MODULE valid_name '(' port_names . ')' ';' $@3 statements ENDMODULE
   16 port_names: port_names . ',' valid_name

    ')'  shift, and go to state 24
    ','  shift, and go to state 25


State 16

    7 module: MODULE valid_name ';' $@1 statements . ENDMODULE
   30 statements: statements . statement
   31           | statements . statement_assign

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    ENDMODULE     shift, and go to state 26
    INPUT         shift, and go to state 18
    OUTPUT        shift, and go to state 19
    INOUT         shift, and go to state 20
    WIRE          shift, and go to state 27
    WAND          shift, and go to state 28
    WOR           shift, and go to state 29
    TRI           shift, and go to state 30
    TRIOR         shift, and go to state 31
    TRIAND        shift, and go to state 32
    SUPPLY0       shift, and go to state 33
    SUPPLY1       shift, and go to state 34
    ASSIGN        shift, and go to state 35

    valid_name            go to state 36
    port_type             go to state 21
    port_decl             go to state 37
    statement             go to state 38
    declaration           go to state 39
    port_decl_statements  go to state 40
    net_type              go to state 41
    net_decl_statements   go to state 42
    net_decl              go to state 43
    statement_assign      go to state 44
    instance              go to state 45


State 17

    9 module: MODULE valid_name '(' ')' ';' . $@2 statements ENDMODULE

    $default  reduce using rule 8 ($@2)

    $@2  go to state 46


State 18

   17 port_type: INPUT .
   18          | INPUT . WIRE

    WIRE  shift, and go to state 47

    $default  reduce using rule 17 (port_type)


State 19

   19 port_type: OUTPUT .
   20          | OUTPUT . REG

    REG  shift, and go to state 48

    $default  reduce using rule 19 (port_type)


State 20

   21 port_type: INOUT .
   22          | INOUT . WIRE
   23          | INOUT . REG

    REG   shift, and go to state 49
    WIRE  shift, and go to state 50

    $default  reduce using rule 21 (port_type)


State 21

   27 port_decl: port_type . valid_name
   28          | port_type . '[' INTEGER ':' INTEGER ']' valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '['           shift, and go to state 51

    valid_name  go to state 52


State 22

   14 module: MODULE valid_name '(' $@4 port_declarations . ')' $@5 ';' statements ENDMODULE
   25 port_declarations: port_declarations . ',' port_decl
   26                  | port_declarations . ',' valid_name

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


State 23

   24 port_declarations: port_decl .

    $default  reduce using rule 24 (port_declarations)


State 24

   11 module: MODULE valid_name '(' port_names ')' . ';' $@3 statements ENDMODULE

    ';'  shift, and go to state 55


State 25

   16 port_names: port_names ',' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 56


State 26

    7 module: MODULE valid_name ';' $@1 statements ENDMODULE .

    $default  reduce using rule 7 (module)


State 27

   38 net_type: WIRE .

    $default  reduce using rule 38 (net_type)


State 28

   39 net_type: WAND .

    $default  reduce using rule 39 (net_type)


State 29

   40 net_type: WOR .

    $default  reduce using rule 40 (net_type)


State 30

   41 net_type: TRI .

    $default  reduce using rule 41 (net_type)


State 31

   42 net_type: TRIOR .

    $default  reduce using rule 42 (net_type)


State 32

   43 net_type: TRIAND .

    $default  reduce using rule 43 (net_type)


State 33

   44 net_type: SUPPLY0 .

    $default  reduce using rule 44 (net_type)


State 34

   45 net_type: SUPPLY1 .

    $default  reduce using rule 45 (net_type)


State 35

   50 statement_assign: ASSIGN . assignments ';'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '{'           shift, and go to state 57

    valid_name   go to state 58
    assignments  go to state 59
    assignment   go to state 60
    lhs          go to state 61
    lhs_concat   go to state 62


State 36

   85 instance: valid_name . valid_name '(' inst_pins ')' ';'
   86         | valid_name . parameters valid_name '(' inst_pins ')' ';'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '#'           shift, and go to state 63

    valid_name  go to state 64
    parameters  go to state 65


State 37

   36 port_decl_statements: port_decl .

    $default  reduce using rule 36 (port_decl_statements)


State 38

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 39

   32 statement: declaration .

    $default  reduce using rule 32 (statement)


State 40

   34 declaration: port_decl_statements . ';'
   37 port_decl_statements: port_decl_statements . ',' valid_name

    ';'  shift, and go to state 66
    ','  shift, and go to state 67


State 41

   48 net_decl: net_type . valid_name
   49         | net_type . '[' INTEGER ':' INTEGER ']' valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '['           shift, and go to state 68

    valid_name  go to state 69


State 42

   35 declaration: net_decl_statements . ';'
   47 net_decl_statements: net_decl_statements . ',' valid_name

    ';'  shift, and go to state 70
    ','  shift, and go to state 71


State 43

   46 net_decl_statements: net_decl .

    $default  reduce using rule 46 (net_decl_statements)


State 44

   31 statements: statements statement_assign .

    $default  reduce using rule 31 (statements)


State 45

   33 statement: instance .

    $default  reduce using rule 33 (statement)


State 46

    9 module: MODULE valid_name '(' ')' ';' $@2 . statements ENDMODULE

    $default  reduce using rule 29 (statements)

    statements  go to state 72


State 47

   18 port_type: INPUT WIRE .

    $default  reduce using rule 18 (port_type)


State 48

   20 port_type: OUTPUT REG .

    $default  reduce using rule 20 (port_type)


State 49

   23 port_type: INOUT REG .

    $default  reduce using rule 23 (port_type)


State 50

   22 port_type: INOUT WIRE .

    $default  reduce using rule 22 (port_type)


State 51

   28 port_decl: port_type '[' . INTEGER ':' INTEGER ']' valid_name

    INTEGER  shift, and go to state 73


State 52

   27 port_decl: port_type valid_name .

    $default  reduce using rule 27 (port_decl)


State 53

   14 module: MODULE valid_name '(' $@4 port_declarations ')' . $@5 ';' statements ENDMODULE

    $default  reduce using rule 13 ($@5)

    $@5  go to state 74


State 54

   25 port_declarations: port_declarations ',' . port_decl
   26                  | port_declarations ',' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INPUT         shift, and go to state 18
    OUTPUT        shift, and go to state 19
    INOUT         shift, and go to state 20

    valid_name  go to state 75
    port_type   go to state 21
    port_decl   go to state 76


State 55

   11 module: MODULE valid_name '(' port_names ')' ';' . $@3 statements ENDMODULE

    $default  reduce using rule 10 ($@3)

    $@3  go to state 77


State 56

   16 port_names: port_names ',' valid_name .

    $default  reduce using rule 16 (port_names)


State 57

   58 lhs_concat: '{' . lhs_exprs '}'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '{'           shift, and go to state 57

    valid_name  go to state 78
    lhs_concat  go to state 79
    lhs_exprs   go to state 80
    lhs_expr    go to state 81


State 58

   54 lhs: valid_name .
   55    | valid_name . '[' INTEGER ']'
   56    | valid_name . '[' INTEGER ':' INTEGER ']'

    '['  shift, and go to state 82

    $default  reduce using rule 54 (lhs)


State 59

   50 statement_assign: ASSIGN assignments . ';'
   52 assignments: assignments . ',' assignment

    ';'  shift, and go to state 83
    ','  shift, and go to state 84


State 60

   51 assignments: assignment .

    $default  reduce using rule 51 (assignments)


State 61

   53 assignment: lhs . '=' rhs

    '='  shift, and go to state 85


State 62

   57 lhs: lhs_concat .

    $default  reduce using rule 57 (lhs)


State 63

  102 parameters: '#' . '(' param_exprs ')'

    '('  shift, and go to state 86


State 64

   85 instance: valid_name valid_name . '(' inst_pins ')' ';'

    '('  shift, and go to state 87


State 65

   86 instance: valid_name parameters . valid_name '(' inst_pins ')' ';'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 88


State 66

   34 declaration: port_decl_statements ';' .

    $default  reduce using rule 34 (declaration)


State 67

   37 port_decl_statements: port_decl_statements ',' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 89


State 68

   49 net_decl: net_type '[' . INTEGER ':' INTEGER ']' valid_name

    INTEGER  shift, and go to state 90


State 69

   48 net_decl: net_type valid_name .

    $default  reduce using rule 48 (net_decl)


State 70

   35 declaration: net_decl_statements ';' .

    $default  reduce using rule 35 (declaration)


State 71

   47 net_decl_statements: net_decl_statements ',' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 91


State 72

    9 module: MODULE valid_name '(' ')' ';' $@2 statements . ENDMODULE
   30 statements: statements . statement
   31           | statements . statement_assign

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    ENDMODULE     shift, and go to state 92
    INPUT         shift, and go to state 18
    OUTPUT        shift, and go to state 19
    INOUT         shift, and go to state 20
    WIRE          shift, and go to state 27
    WAND          shift, and go to state 28
    WOR           shift, and go to state 29
    TRI           shift, and go to state 30
    TRIOR         shift, and go to state 31
    TRIAND        shift, and go to state 32
    SUPPLY0       shift, and go to state 33
    SUPPLY1       shift, and go to state 34
    ASSIGN        shift, and go to state 35

    valid_name            go to state 36
    port_type             go to state 21
    port_decl             go to state 37
    statement             go to state 38
    declaration           go to state 39
    port_decl_statements  go to state 40
    net_type              go to state 41
    net_decl_statements   go to state 42
    net_decl              go to state 43
    statement_assign      go to state 44
    instance              go to state 45


State 73

   28 port_decl: port_type '[' INTEGER . ':' INTEGER ']' valid_name

    ':'  shift, and go to state 93


State 74

   14 module: MODULE valid_name '(' $@4 port_declarations ')' $@5 . ';' statements ENDMODULE

    ';'  shift, and go to state 94


State 75

   26 port_declarations: port_declarations ',' valid_name .

    $default  reduce using rule 26 (port_declarations)


State 76

   25 port_declarations: port_declarations ',' port_decl .

    $default  reduce using rule 25 (port_declarations)


State 77

   11 module: MODULE valid_name '(' port_names ')' ';' $@3 . statements ENDMODULE

    $default  reduce using rule 29 (statements)

    statements  go to state 95


State 78

   61 lhs_expr: valid_name .
   62         | valid_name . '[' INTEGER ']'
   63         | valid_name . '[' INTEGER ':' INTEGER ']'

    '['  shift, and go to state 96

    $default  reduce using rule 61 (lhs_expr)


State 79

   64 lhs_expr: lhs_concat .

    $default  reduce using rule 64 (lhs_expr)


State 80

   58 lhs_concat: '{' lhs_exprs . '}'
   60 lhs_exprs: lhs_exprs . ',' lhs_expr

    ','  shift, and go to state 97
    '}'  shift, and go to state 98


State 81

   59 lhs_exprs: lhs_expr .

    $default  reduce using rule 59 (lhs_exprs)


State 82

   55 lhs: valid_name '[' . INTEGER ']'
   56    | valid_name '[' . INTEGER ':' INTEGER ']'

    INTEGER  shift, and go to state 99


State 83

   50 statement_assign: ASSIGN assignments ';' .

    $default  reduce using rule 50 (statement_assign)


State 84

   52 assignments: assignments ',' . assignment

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '{'           shift, and go to state 57

    valid_name  go to state 58
    assignment  go to state 100
    lhs         go to state 61
    lhs_concat  go to state 62


State 85

   53 assignment: lhs '=' . rhs

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108

    valid_name  go to state 109
    constant    go to state 110
    rhs         go to state 111
    rhs_concat  go to state 112


State 86

  102 parameters: '#' '(' . param_exprs ')'

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name   go to state 116
    constant     go to state 117
    param_exprs  go to state 118
    param_expr   go to state 119


State 87

   85 instance: valid_name valid_name '(' . inst_pins ')' ';'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108
    '.'           shift, and go to state 120

    $default  reduce using rule 87 (inst_pins)

    valid_name        go to state 109
    constant          go to state 110
    rhs               go to state 121
    rhs_concat        go to state 112
    inst_pins         go to state 122
    nets_by_position  go to state 123
    nets_by_name      go to state 124
    net_by_name       go to state 125


State 88

   86 instance: valid_name parameters valid_name . '(' inst_pins ')' ';'

    '('  shift, and go to state 126


State 89

   37 port_decl_statements: port_decl_statements ',' valid_name .

    $default  reduce using rule 37 (port_decl_statements)


State 90

   49 net_decl: net_type '[' INTEGER . ':' INTEGER ']' valid_name

    ':'  shift, and go to state 127


State 91

   47 net_decl_statements: net_decl_statements ',' valid_name .

    $default  reduce using rule 47 (net_decl_statements)


State 92

    9 module: MODULE valid_name '(' ')' ';' $@2 statements ENDMODULE .

    $default  reduce using rule 9 (module)


State 93

   28 port_decl: port_type '[' INTEGER ':' . INTEGER ']' valid_name

    INTEGER  shift, and go to state 128


State 94

   14 module: MODULE valid_name '(' $@4 port_declarations ')' $@5 ';' . statements ENDMODULE

    $default  reduce using rule 29 (statements)

    statements  go to state 129


State 95

   11 module: MODULE valid_name '(' port_names ')' ';' $@3 statements . ENDMODULE
   30 statements: statements . statement
   31           | statements . statement_assign

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    ENDMODULE     shift, and go to state 130
    INPUT         shift, and go to state 18
    OUTPUT        shift, and go to state 19
    INOUT         shift, and go to state 20
    WIRE          shift, and go to state 27
    WAND          shift, and go to state 28
    WOR           shift, and go to state 29
    TRI           shift, and go to state 30
    TRIOR         shift, and go to state 31
    TRIAND        shift, and go to state 32
    SUPPLY0       shift, and go to state 33
    SUPPLY1       shift, and go to state 34
    ASSIGN        shift, and go to state 35

    valid_name            go to state 36
    port_type             go to state 21
    port_decl             go to state 37
    statement             go to state 38
    declaration           go to state 39
    port_decl_statements  go to state 40
    net_type              go to state 41
    net_decl_statements   go to state 42
    net_decl              go to state 43
    statement_assign      go to state 44
    instance              go to state 45


State 96

   62 lhs_expr: valid_name '[' . INTEGER ']'
   63         | valid_name '[' . INTEGER ':' INTEGER ']'

    INTEGER  shift, and go to state 131


State 97

   60 lhs_exprs: lhs_exprs ',' . lhs_expr

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    '{'           shift, and go to state 57

    valid_name  go to state 78
    lhs_concat  go to state 79
    lhs_expr    go to state 132


State 98

   58 lhs_concat: '{' lhs_exprs '}' .

    $default  reduce using rule 58 (lhs_concat)


State 99

   55 lhs: valid_name '[' INTEGER . ']'
   56    | valid_name '[' INTEGER . ':' INTEGER ']'

    ':'  shift, and go to state 133
    ']'  shift, and go to state 134


State 100

   52 assignments: assignments ',' assignment .

    $default  reduce using rule 52 (assignments)


State 101

   65 constant: INTEGER .

    $default  reduce using rule 65 (constant)


State 102

   66 constant: BINARY .

    $default  reduce using rule 66 (constant)


State 103

   67 constant: OCTAL .

    $default  reduce using rule 67 (constant)


State 104

   68 constant: DECIMAL .

    $default  reduce using rule 68 (constant)


State 105

   69 constant: HEX .

    $default  reduce using rule 69 (constant)


State 106

   70 constant: REAL .

    $default  reduce using rule 70 (constant)


State 107

   71 constant: EXP .

    $default  reduce using rule 71 (constant)


State 108

   77 rhs_concat: '{' . rhs_exprs '}'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108

    valid_name  go to state 135
    constant    go to state 136
    rhs_concat  go to state 137
    rhs_exprs   go to state 138
    rhs_expr    go to state 139


State 109

   72 rhs: valid_name .
   73    | valid_name . '[' INTEGER ']'
   74    | valid_name . '[' INTEGER ':' INTEGER ']'

    '['  shift, and go to state 140

    $default  reduce using rule 72 (rhs)


State 110

   75 rhs: constant .

    $default  reduce using rule 75 (rhs)


State 111

   53 assignment: lhs '=' rhs .

    $default  reduce using rule 53 (assignment)


State 112

   76 rhs: rhs_concat .

    $default  reduce using rule 76 (rhs)


State 113

  108 param_expr: '-' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 141


State 114

  113 param_expr: '(' . param_expr ')'

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 142


State 115

  106 param_expr: '`' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 143


State 116

  105 param_expr: valid_name .

    $default  reduce using rule 105 (param_expr)


State 117

  107 param_expr: constant .

    $default  reduce using rule 107 (param_expr)


State 118

  102 parameters: '#' '(' param_exprs . ')'
  104 param_exprs: param_exprs . ',' param_expr

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


State 119

  103 param_exprs: param_expr .
  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr

    '-'  shift, and go to state 146
    '+'  shift, and go to state 147
    '*'  shift, and go to state 148
    '/'  shift, and go to state 149

    $default  reduce using rule 103 (param_exprs)


State 120

   94 net_by_name: '.' . valid_name '(' ')'
   95            | '.' . valid_name '(' valid_name ')'
   96            | '.' . valid_name '(' valid_name '[' INTEGER ']' ')'
   97            | '.' . valid_name '(' rhs ')'
   98            | '.' . valid_name '[' INTEGER ']' '(' ')'
   99            | '.' . valid_name '[' INTEGER ']' '(' rhs ')'
  100            | '.' . valid_name '[' INTEGER ':' INTEGER ']' '(' ')'
  101            | '.' . valid_name '[' INTEGER ':' INTEGER ']' '(' rhs ')'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 150


State 121

   90 nets_by_position: rhs .

    $default  reduce using rule 90 (nets_by_position)


State 122

   85 instance: valid_name valid_name '(' inst_pins . ')' ';'

    ')'  shift, and go to state 151


State 123

   88 inst_pins: nets_by_position .
   91 nets_by_position: nets_by_position . ',' rhs

    ','  shift, and go to state 152

    $default  reduce using rule 88 (inst_pins)


State 124

   89 inst_pins: nets_by_name .
   93 nets_by_name: nets_by_name . ',' net_by_name

    ','  shift, and go to state 153

    $default  reduce using rule 89 (inst_pins)


State 125

   92 nets_by_name: net_by_name .

    $default  reduce using rule 92 (nets_by_name)


State 126

   86 instance: valid_name parameters valid_name '(' . inst_pins ')' ';'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108
    '.'           shift, and go to state 120

    $default  reduce using rule 87 (inst_pins)

    valid_name        go to state 109
    constant          go to state 110
    rhs               go to state 121
    rhs_concat        go to state 112
    inst_pins         go to state 154
    nets_by_position  go to state 123
    nets_by_name      go to state 124
    net_by_name       go to state 125


State 127

   49 net_decl: net_type '[' INTEGER ':' . INTEGER ']' valid_name

    INTEGER  shift, and go to state 155


State 128

   28 port_decl: port_type '[' INTEGER ':' INTEGER . ']' valid_name

    ']'  shift, and go to state 156


State 129

   14 module: MODULE valid_name '(' $@4 port_declarations ')' $@5 ';' statements . ENDMODULE
   30 statements: statements . statement
   31           | statements . statement_assign

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    ENDMODULE     shift, and go to state 157
    INPUT         shift, and go to state 18
    OUTPUT        shift, and go to state 19
    INOUT         shift, and go to state 20
    WIRE          shift, and go to state 27
    WAND          shift, and go to state 28
    WOR           shift, and go to state 29
    TRI           shift, and go to state 30
    TRIOR         shift, and go to state 31
    TRIAND        shift, and go to state 32
    SUPPLY0       shift, and go to state 33
    SUPPLY1       shift, and go to state 34
    ASSIGN        shift, and go to state 35

    valid_name            go to state 36
    port_type             go to state 21
    port_decl             go to state 37
    statement             go to state 38
    declaration           go to state 39
    port_decl_statements  go to state 40
    net_type              go to state 41
    net_decl_statements   go to state 42
    net_decl              go to state 43
    statement_assign      go to state 44
    instance              go to state 45


State 130

   11 module: MODULE valid_name '(' port_names ')' ';' $@3 statements ENDMODULE .

    $default  reduce using rule 11 (module)


State 131

   62 lhs_expr: valid_name '[' INTEGER . ']'
   63         | valid_name '[' INTEGER . ':' INTEGER ']'

    ':'  shift, and go to state 158
    ']'  shift, and go to state 159


State 132

   60 lhs_exprs: lhs_exprs ',' lhs_expr .

    $default  reduce using rule 60 (lhs_exprs)


State 133

   56 lhs: valid_name '[' INTEGER ':' . INTEGER ']'

    INTEGER  shift, and go to state 160


State 134

   55 lhs: valid_name '[' INTEGER ']' .

    $default  reduce using rule 55 (lhs)


State 135

   80 rhs_expr: valid_name .
   81         | valid_name . '[' INTEGER ']'
   82         | valid_name . '[' INTEGER ':' INTEGER ']'

    '['  shift, and go to state 161

    $default  reduce using rule 80 (rhs_expr)


State 136

   83 rhs_expr: constant .

    $default  reduce using rule 83 (rhs_expr)


State 137

   84 rhs_expr: rhs_concat .

    $default  reduce using rule 84 (rhs_expr)


State 138

   77 rhs_concat: '{' rhs_exprs . '}'
   79 rhs_exprs: rhs_exprs . ',' rhs_expr

    ','  shift, and go to state 162
    '}'  shift, and go to state 163


State 139

   78 rhs_exprs: rhs_expr .

    $default  reduce using rule 78 (rhs_exprs)


State 140

   73 rhs: valid_name '[' . INTEGER ']'
   74    | valid_name '[' . INTEGER ':' INTEGER ']'

    INTEGER  shift, and go to state 164


State 141

  108 param_expr: '-' param_expr .
  109           | param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr

    $default  reduce using rule 108 (param_expr)


State 142

  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr
  113           | '(' param_expr . ')'

    '-'  shift, and go to state 146
    '+'  shift, and go to state 147
    '*'  shift, and go to state 148
    '/'  shift, and go to state 149
    ')'  shift, and go to state 165


State 143

  106 param_expr: '`' valid_name .

    $default  reduce using rule 106 (param_expr)


State 144

  102 parameters: '#' '(' param_exprs ')' .

    $default  reduce using rule 102 (parameters)


State 145

  104 param_exprs: param_exprs ',' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 166


State 146

  110 param_expr: param_expr '-' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 167


State 147

  109 param_expr: param_expr '+' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 168


State 148

  111 param_expr: param_expr '*' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 169


State 149

  112 param_expr: param_expr '/' . param_expr

    '-'           shift, and go to state 113
    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '('           shift, and go to state 114
    '`'           shift, and go to state 115

    valid_name  go to state 116
    constant    go to state 117
    param_expr  go to state 170


State 150

   94 net_by_name: '.' valid_name . '(' ')'
   95            | '.' valid_name . '(' valid_name ')'
   96            | '.' valid_name . '(' valid_name '[' INTEGER ']' ')'
   97            | '.' valid_name . '(' rhs ')'
   98            | '.' valid_name . '[' INTEGER ']' '(' ')'
   99            | '.' valid_name . '[' INTEGER ']' '(' rhs ')'
  100            | '.' valid_name . '[' INTEGER ':' INTEGER ']' '(' ')'
  101            | '.' valid_name . '[' INTEGER ':' INTEGER ']' '(' rhs ')'

    '('  shift, and go to state 171
    '['  shift, and go to state 172


State 151

   85 instance: valid_name valid_name '(' inst_pins ')' . ';'

    ';'  shift, and go to state 173


State 152

   91 nets_by_position: nets_by_position ',' . rhs

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108

    valid_name  go to state 109
    constant    go to state 110
    rhs         go to state 174
    rhs_concat  go to state 112


State 153

   93 nets_by_name: nets_by_name ',' . net_by_name

    '.'  shift, and go to state 120

    net_by_name  go to state 175


State 154

   86 instance: valid_name parameters valid_name '(' inst_pins . ')' ';'

    ')'  shift, and go to state 176


State 155

   49 net_decl: net_type '[' INTEGER ':' INTEGER . ']' valid_name

    ']'  shift, and go to state 177


State 156

   28 port_decl: port_type '[' INTEGER ':' INTEGER ']' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 178


State 157

   14 module: MODULE valid_name '(' $@4 port_declarations ')' $@5 ';' statements ENDMODULE .

    $default  reduce using rule 14 (module)


State 158

   63 lhs_expr: valid_name '[' INTEGER ':' . INTEGER ']'

    INTEGER  shift, and go to state 179


State 159

   62 lhs_expr: valid_name '[' INTEGER ']' .

    $default  reduce using rule 62 (lhs_expr)


State 160

   56 lhs: valid_name '[' INTEGER ':' INTEGER . ']'

    ']'  shift, and go to state 180


State 161

   81 rhs_expr: valid_name '[' . INTEGER ']'
   82         | valid_name '[' . INTEGER ':' INTEGER ']'

    INTEGER  shift, and go to state 181


State 162

   79 rhs_exprs: rhs_exprs ',' . rhs_expr

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    '{'           shift, and go to state 108

    valid_name  go to state 135
    constant    go to state 136
    rhs_concat  go to state 137
    rhs_expr    go to state 182


State 163

   77 rhs_concat: '{' rhs_exprs '}' .

    $default  reduce using rule 77 (rhs_concat)


State 164

   73 rhs: valid_name '[' INTEGER . ']'
   74    | valid_name '[' INTEGER . ':' INTEGER ']'

    ':'  shift, and go to state 183
    ']'  shift, and go to state 184


State 165

  113 param_expr: '(' param_expr ')' .

    $default  reduce using rule 113 (param_expr)


State 166

  104 param_exprs: param_exprs ',' param_expr .
  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr

    '-'  shift, and go to state 146
    '+'  shift, and go to state 147
    '*'  shift, and go to state 148
    '/'  shift, and go to state 149

    $default  reduce using rule 104 (param_exprs)


State 167

  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  110           | param_expr '-' param_expr .
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr

    '*'  shift, and go to state 148
    '/'  shift, and go to state 149

    $default  reduce using rule 110 (param_expr)


State 168

  109 param_expr: param_expr . '+' param_expr
  109           | param_expr '+' param_expr .
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr

    '*'  shift, and go to state 148
    '/'  shift, and go to state 149

    $default  reduce using rule 109 (param_expr)


State 169

  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  111           | param_expr '*' param_expr .
  112           | param_expr . '/' param_expr

    $default  reduce using rule 111 (param_expr)


State 170

  109 param_expr: param_expr . '+' param_expr
  110           | param_expr . '-' param_expr
  111           | param_expr . '*' param_expr
  112           | param_expr . '/' param_expr
  112           | param_expr '/' param_expr .

    $default  reduce using rule 112 (param_expr)


State 171

   94 net_by_name: '.' valid_name '(' . ')'
   95            | '.' valid_name '(' . valid_name ')'
   96            | '.' valid_name '(' . valid_name '[' INTEGER ']' ')'
   97            | '.' valid_name '(' . rhs ')'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    ')'           shift, and go to state 185
    '{'           shift, and go to state 108

    valid_name  go to state 186
    constant    go to state 110
    rhs         go to state 187
    rhs_concat  go to state 112


State 172

   98 net_by_name: '.' valid_name '[' . INTEGER ']' '(' ')'
   99            | '.' valid_name '[' . INTEGER ']' '(' rhs ')'
  100            | '.' valid_name '[' . INTEGER ':' INTEGER ']' '(' ')'
  101            | '.' valid_name '[' . INTEGER ':' INTEGER ']' '(' rhs ')'

    INTEGER  shift, and go to state 188


State 173

   85 instance: valid_name valid_name '(' inst_pins ')' ';' .

    $default  reduce using rule 85 (instance)


State 174

   91 nets_by_position: nets_by_position ',' rhs .

    $default  reduce using rule 91 (nets_by_position)


State 175

   93 nets_by_name: nets_by_name ',' net_by_name .

    $default  reduce using rule 93 (nets_by_name)


State 176

   86 instance: valid_name parameters valid_name '(' inst_pins ')' . ';'

    ';'  shift, and go to state 189


State 177

   49 net_decl: net_type '[' INTEGER ':' INTEGER ']' . valid_name

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7

    valid_name  go to state 190


State 178

   28 port_decl: port_type '[' INTEGER ':' INTEGER ']' valid_name .

    $default  reduce using rule 28 (port_decl)


State 179

   63 lhs_expr: valid_name '[' INTEGER ':' INTEGER . ']'

    ']'  shift, and go to state 191


State 180

   56 lhs: valid_name '[' INTEGER ':' INTEGER ']' .

    $default  reduce using rule 56 (lhs)


State 181

   81 rhs_expr: valid_name '[' INTEGER . ']'
   82         | valid_name '[' INTEGER . ':' INTEGER ']'

    ':'  shift, and go to state 192
    ']'  shift, and go to state 193


State 182

   79 rhs_exprs: rhs_exprs ',' rhs_expr .

    $default  reduce using rule 79 (rhs_exprs)


State 183

   74 rhs: valid_name '[' INTEGER ':' . INTEGER ']'

    INTEGER  shift, and go to state 194


State 184

   73 rhs: valid_name '[' INTEGER ']' .

    $default  reduce using rule 73 (rhs)


State 185

   94 net_by_name: '.' valid_name '(' ')' .

    $default  reduce using rule 94 (net_by_name)


State 186

   72 rhs: valid_name .
   73    | valid_name . '[' INTEGER ']'
   74    | valid_name . '[' INTEGER ':' INTEGER ']'
   95 net_by_name: '.' valid_name '(' valid_name . ')'
   96            | '.' valid_name '(' valid_name . '[' INTEGER ']' ')'

    ')'  shift, and go to state 195
    '['  shift, and go to state 196

    ')'  [reduce using rule 72 (rhs)]


State 187

   97 net_by_name: '.' valid_name '(' rhs . ')'

    ')'  shift, and go to state 197


State 188

   98 net_by_name: '.' valid_name '[' INTEGER . ']' '(' ')'
   99            | '.' valid_name '[' INTEGER . ']' '(' rhs ')'
  100            | '.' valid_name '[' INTEGER . ':' INTEGER ']' '(' ')'
  101            | '.' valid_name '[' INTEGER . ':' INTEGER ']' '(' rhs ')'

    ':'  shift, and go to state 198
    ']'  shift, and go to state 199


State 189

   86 instance: valid_name parameters valid_name '(' inst_pins ')' ';' .

    $default  reduce using rule 86 (instance)


State 190

   49 net_decl: net_type '[' INTEGER ':' INTEGER ']' valid_name .

    $default  reduce using rule 49 (net_decl)


State 191

   63 lhs_expr: valid_name '[' INTEGER ':' INTEGER ']' .

    $default  reduce using rule 63 (lhs_expr)


State 192

   82 rhs_expr: valid_name '[' INTEGER ':' . INTEGER ']'

    INTEGER  shift, and go to state 200


State 193

   81 rhs_expr: valid_name '[' INTEGER ']' .

    $default  reduce using rule 81 (rhs_expr)


State 194

   74 rhs: valid_name '[' INTEGER ':' INTEGER . ']'

    ']'  shift, and go to state 201


State 195

   95 net_by_name: '.' valid_name '(' valid_name ')' .

    $default  reduce using rule 95 (net_by_name)


State 196

   73 rhs: valid_name '[' . INTEGER ']'
   74    | valid_name '[' . INTEGER ':' INTEGER ']'
   96 net_by_name: '.' valid_name '(' valid_name '[' . INTEGER ']' ')'

    INTEGER  shift, and go to state 202


State 197

   97 net_by_name: '.' valid_name '(' rhs ')' .

    $default  reduce using rule 97 (net_by_name)


State 198

  100 net_by_name: '.' valid_name '[' INTEGER ':' . INTEGER ']' '(' ')'
  101            | '.' valid_name '[' INTEGER ':' . INTEGER ']' '(' rhs ')'

    INTEGER  shift, and go to state 203


State 199

   98 net_by_name: '.' valid_name '[' INTEGER ']' . '(' ')'
   99            | '.' valid_name '[' INTEGER ']' . '(' rhs ')'

    '('  shift, and go to state 204


State 200

   82 rhs_expr: valid_name '[' INTEGER ':' INTEGER . ']'

    ']'  shift, and go to state 205


State 201

   74 rhs: valid_name '[' INTEGER ':' INTEGER ']' .

    $default  reduce using rule 74 (rhs)


State 202

   73 rhs: valid_name '[' INTEGER . ']'
   74    | valid_name '[' INTEGER . ':' INTEGER ']'
   96 net_by_name: '.' valid_name '(' valid_name '[' INTEGER . ']' ')'

    ':'  shift, and go to state 183
    ']'  shift, and go to state 206


State 203

  100 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER . ']' '(' ')'
  101            | '.' valid_name '[' INTEGER ':' INTEGER . ']' '(' rhs ')'

    ']'  shift, and go to state 207


State 204

   98 net_by_name: '.' valid_name '[' INTEGER ']' '(' . ')'
   99            | '.' valid_name '[' INTEGER ']' '(' . rhs ')'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    ')'           shift, and go to state 208
    '{'           shift, and go to state 108

    valid_name  go to state 109
    constant    go to state 110
    rhs         go to state 209
    rhs_concat  go to state 112


State 205

   82 rhs_expr: valid_name '[' INTEGER ':' INTEGER ']' .

    $default  reduce using rule 82 (rhs_expr)


State 206

   73 rhs: valid_name '[' INTEGER ']' .
   96 net_by_name: '.' valid_name '(' valid_name '[' INTEGER ']' . ')'

    ')'  shift, and go to state 210

    ')'  [reduce using rule 73 (rhs)]


State 207

  100 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER ']' . '(' ')'
  101            | '.' valid_name '[' INTEGER ':' INTEGER ']' . '(' rhs ')'

    '('  shift, and go to state 211


State 208

   98 net_by_name: '.' valid_name '[' INTEGER ']' '(' ')' .

    $default  reduce using rule 98 (net_by_name)


State 209

   99 net_by_name: '.' valid_name '[' INTEGER ']' '(' rhs . ')'

    ')'  shift, and go to state 212


State 210

   96 net_by_name: '.' valid_name '(' valid_name '[' INTEGER ']' ')' .

    $default  reduce using rule 96 (net_by_name)


State 211

  100 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER ']' '(' . ')'
  101            | '.' valid_name '[' INTEGER ':' INTEGER ']' '(' . rhs ')'

    NAME          shift, and go to state 6
    ESCAPED_NAME  shift, and go to state 7
    INTEGER       shift, and go to state 101
    BINARY        shift, and go to state 102
    OCTAL         shift, and go to state 103
    DECIMAL       shift, and go to state 104
    HEX           shift, and go to state 105
    REAL          shift, and go to state 106
    EXP           shift, and go to state 107
    ')'           shift, and go to state 213
    '{'           shift, and go to state 108

    valid_name  go to state 109
    constant    go to state 110
    rhs         go to state 214
    rhs_concat  go to state 112


State 212

   99 net_by_name: '.' valid_name '[' INTEGER ']' '(' rhs ')' .

    $default  reduce using rule 99 (net_by_name)


State 213

  100 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER ']' '(' ')' .

    $default  reduce using rule 100 (net_by_name)


State 214

  101 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER ']' '(' rhs . ')'

    ')'  shift, and go to state 215


State 215

  101 net_by_name: '.' valid_name '[' INTEGER ':' INTEGER ']' '(' rhs ')' .

    $default  reduce using rule 101 (net_by_name)
